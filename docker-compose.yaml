version: '3.8'

services:
  moon-app:
    container_name: moon-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5050:5050"  # Порт приложения
    depends_on:
      moon-db:
        condition: service_healthy
      geoserver:
        condition: service_healthy
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  geoserver:
    image: docker.osgeo.org/geoserver:2.27.0
    container_name: geoserver
    environment:
      - INSTALL_EXTENSIONS=true
      - STABLE_EXTENSIONS=monitor  
      - COMMUNITY_EXTENSIONS=monitor-micrometer  
      - MICROMETER_ENABLED=true
      - GEOSERVER_ADMIN_PASSWORD=geoserver
      - GEOSERVER_ADMIN_USER=admin
      - GEOWEBCACHE_CACHE_DIR=/opt/geoserver/data_dir/gwc
      - GEOSERVER_DATA_DIR=/opt/geoserver_data
      - JAVA_OPTS=-Dgt.userProjectionsDirectory=/opt/geoserver_data/user_projections -Dorg.geotools.referencing.factory.epsg.intentional=true
      - "JAVA_TOOL_OPTIONS=-javaagent:/opt/jmx-exporter.jar=8081:/opt/config.yml"
      - "GEOSERVER_JAVA_OPTS=-Xms512m -Xmx2048m -XX:MaxMetaspaceSize=512m" #GEOSERVER_JAVA_OPTS=-Xms2G -Xmx4G -XX:SoftRefLRUPolicyMSPerMB=36000
      - ENABLE_JSONP=true
      - DISABLE_GWC=true # Отключить GeoWebCache если не используется
    volumes:
       # Папка с картами
      - ./maps:/maps

      - ./custom_projections/epsg.properties:/opt/geoserver_data/user_projections/epsg.properties:ro
      - ./geoserver_data:/opt/geoserver_data

      # JMX Exporter
      - ./config.yml:/opt/config.yml
      - ./jmx_prometheus_javaagent-0.17.2.jar:/opt/jmx-exporter.jar
      - ./monitor.properties:/opt/geoserver_data/monitoring/monitor.properties
    ports:
      - "8080:8080"
      - "8081:8081"  # Порт для JMX Exporter
    depends_on:
      postgis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/geoserver"]
      interval: 20s
      timeout: 10s
      retries: 4
    restart: unless-stopped

  postgis:
    image: postgis/postgis:15-3.3
    container_name: postgis
    environment:
      POSTGRES_USER: geo_user
      POSTGRES_PASSWORD: geo_pass
      POSTGRES_DB: geo_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U geo_user -d geo_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  moon-db:
    image: postgres:13
    container_name: moon-db
    environment:
      POSTGRES_DB: moon-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    volumes:
      - ./backend/repository/migrations:/docker-entrypoint-initdb.d
      - moon_db_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d moon-db"]
      interval: 5s
      timeout: 5s
      retries: 15
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Установите пароль для администратора
    depends_on:
      - prometheus
    restart: unless-stopped


volumes:
  geoserver_data:
  postgres_data:
  moon_db_data: